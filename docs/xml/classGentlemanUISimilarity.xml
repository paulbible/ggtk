<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classGentlemanUISimilarity" kind="class" language="C++" prot="public">
    <compoundname>GentlemanUISimilarity</compoundname>
    <basecompoundref refid="classTermSetSimilarityInterface" prot="public" virt="non-virtual">TermSetSimilarityInterface</basecompoundref>
    <includes refid="GentlemanSimUISetSimilarity_8hpp" local="no">ggtk/GentlemanSimUISetSimilarity.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classGentlemanUISimilarity_1aac64eed972ccb9672277b795b088f5a7" prot="private" static="no">
        <type>boost::accumulators::accumulator_set&lt; double, boost::accumulators::stats&lt; boost::accumulators::tag::mean &gt; &gt;</type>
        <definition>typedef boost::accumulators::accumulator_set&lt; double, boost::accumulators::stats&lt; boost::accumulators::tag::mean&gt; &gt; GentlemanUISimilarity::MeanAccumulator</definition>
        <argsstring></argsstring>
        <name>MeanAccumulator</name>
        <briefdescription>
<para>typedef of a boost accumulator calculating the mean of double values </para>        </briefdescription>
        <detaileddescription>
<para>A boost accumulator to calculate mean. This is hidden in a typedef to promote readabilbity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="126" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGentlemanUISimilarity_1a107acffb085bef30138ac89260d9ddc2" prot="private" static="no">
        <type>boost::accumulators::accumulator_set&lt; double, boost::accumulators::stats&lt; boost::accumulators::tag::max &gt; &gt;</type>
        <definition>typedef boost::accumulators::accumulator_set&lt; double, boost::accumulators::stats&lt; boost::accumulators::tag::max&gt; &gt; GentlemanUISimilarity::MaxAccumulator</definition>
        <argsstring></argsstring>
        <name>MaxAccumulator</name>
        <briefdescription>
<para>typedef of a boost accumulator calculating the max of double values </para>        </briefdescription>
        <detaileddescription>
<para>A boost accumulator to calculate max. This is hidden in a typedef to promote readabilbity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="134" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGentlemanUISimilarity_1afb924baeebc9f174b5c83ed0ee99b5dd" prot="private" static="no" mutable="no">
        <type><ref refid="classTermSimilarityInterface" kindref="compound">TermSimilarityInterface</ref> *</type>
        <definition>TermSimilarityInterface* GentlemanUISimilarity::_similarity</definition>
        <argsstring></argsstring>
        <name>_similarity</name>
        <briefdescription>
<para>Pointer to the actual similarity measure. </para>        </briefdescription>
        <detaileddescription>
<para>This object will actually calculate the similarity between pairs of terms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="118" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGentlemanUISimilarity_1af6e913ef9fc584207a25dc732e6492b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GentlemanUISimilarity::GentlemanUISimilarity</definition>
        <argsstring>(TermSimilarityInterface *simMeasure)</argsstring>
        <name>GentlemanUISimilarity</name>
        <param>
          <type><ref refid="classTermSimilarityInterface" kindref="compound">TermSimilarityInterface</ref> *</type>
          <declname>simMeasure</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Creates the <ref refid="classGentlemanUISimilarity" kindref="compound">GentlemanUISimilarity</ref> class assigning the similarity measure private memeber. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="26" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classGentlemanUISimilarity_1adc95af100919a4c056ab1a45af09c1ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GentlemanUISimilarity::calculateSimilarity</definition>
        <argsstring>(boost::unordered_set&lt; std::string &gt; termsA, boost::unordered_set&lt; std::string &gt; termsB)</argsstring>
        <name>calculateSimilarity</name>
        <param>
          <type>boost::unordered_set&lt; std::string &gt;</type>
          <declname>termsA</declname>
        </param>
        <param>
          <type>boost::unordered_set&lt; std::string &gt;</type>
          <declname>termsB</declname>
        </param>
        <briefdescription>
<para>A method for calculating term set to term set similarity for <ref refid="namespaceGO" kindref="compound">GO</ref> terms;. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the best match average similarity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="35" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="35" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class to calculate Gentleman&apos;s UI similarity between go terms for 2 sets. </para>    </briefdescription>
    <detaileddescription>
<para>This is a stub. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="104">
        <label>GentlemanUISimilarity</label>
        <link refid="classGentlemanUISimilarity"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>TermSetSimilarityInterface</label>
        <link refid="classTermSetSimilarityInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="106">
        <label>GentlemanUISimilarity</label>
        <link refid="classGentlemanUISimilarity"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="107">
        <label>TermSetSimilarityInterface</label>
        <link refid="classTermSetSimilarityInterface"/>
      </node>
    </collaborationgraph>
    <location file="ggtk/GentlemanSimUISetSimilarity.hpp" line="19" column="1" bodyfile="ggtk/GentlemanSimUISetSimilarity.hpp" bodystart="19" bodyend="136"/>
    <listofallmembers>
      <member refid="classGentlemanUISimilarity_1afb924baeebc9f174b5c83ed0ee99b5dd" prot="private" virt="non-virtual"><scope>GentlemanUISimilarity</scope><name>_similarity</name></member>
      <member refid="classGentlemanUISimilarity_1adc95af100919a4c056ab1a45af09c1ac" prot="public" virt="non-virtual"><scope>GentlemanUISimilarity</scope><name>calculateSimilarity</name></member>
      <member refid="classTermSetSimilarityInterface_1aeb985b714efc3df40e55bdd31e425e04" prot="public" virt="pure-virtual" ambiguityscope="TermSetSimilarityInterface::"><scope>GentlemanUISimilarity</scope><name>calculateSimilarity</name></member>
      <member refid="classGentlemanUISimilarity_1af6e913ef9fc584207a25dc732e6492b0" prot="public" virt="non-virtual"><scope>GentlemanUISimilarity</scope><name>GentlemanUISimilarity</name></member>
      <member refid="classGentlemanUISimilarity_1a107acffb085bef30138ac89260d9ddc2" prot="private" virt="non-virtual"><scope>GentlemanUISimilarity</scope><name>MaxAccumulator</name></member>
      <member refid="classGentlemanUISimilarity_1aac64eed972ccb9672277b795b088f5a7" prot="private" virt="non-virtual"><scope>GentlemanUISimilarity</scope><name>MeanAccumulator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
