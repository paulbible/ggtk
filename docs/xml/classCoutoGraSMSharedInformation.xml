<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classCoutoGraSMSharedInformation" kind="class" language="C++" prot="public">
    <compoundname>CoutoGraSMSharedInformation</compoundname>
    <basecompoundref refid="classSharedInformationInterface" prot="public" virt="non-virtual">SharedInformationInterface</basecompoundref>
    <includes refid="CoutoGraSMSharedInformation_8hpp" local="no">ggtk/CoutoGraSMSharedInformation.hpp</includes>
    <innerclass refid="classCoutoGraSMSharedInformation_1_1PathNumDFSVisitor" prot="private">CoutoGraSMSharedInformation::PathNumDFSVisitor</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCoutoGraSMSharedInformation_1a0c3d8e713e165cd86a0c7b3ea95bd950" prot="private" static="no" mutable="no">
        <type><ref refid="classGoGraph" kindref="compound">GoGraph</ref> *</type>
        <definition>GoGraph* CoutoGraSMSharedInformation::_goGraph</definition>
        <argsstring></argsstring>
        <name>_goGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="305" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCoutoGraSMSharedInformation_1a4758ab6cce195fc9aeec4a038e2ab838" prot="private" static="no" mutable="no">
        <type><ref refid="classTermInformationContentMap" kindref="compound">TermInformationContentMap</ref></type>
        <definition>TermInformationContentMap CoutoGraSMSharedInformation::_icMap</definition>
        <argsstring></argsstring>
        <name>_icMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="306" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1a8e923a60f27eca7922a628a9efd7afdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CoutoGraSMSharedInformation::CoutoGraSMSharedInformation</definition>
        <argsstring>(GoGraph *goGraph, TermInformationContentMap &amp;icMap)</argsstring>
        <name>CoutoGraSMSharedInformation</name>
        <param>
          <type><ref refid="classGoGraph" kindref="compound">GoGraph</ref> *</type>
          <declname>goGraph</declname>
        </param>
        <param>
          <type><ref refid="classTermInformationContentMap" kindref="compound">TermInformationContentMap</ref> &amp;</type>
          <declname>icMap</declname>
        </param>
        <briefdescription>
<para>A constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Creates the CoutoGraSMGreaterOrEqual class </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="43" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1ac1dd8eacbfde6f724b11f4b276e41faf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boost::unordered_set&lt; std::string &gt;</type>
        <definition>boost::unordered_set&lt;std::string&gt; CoutoGraSMSharedInformation::getCommonDisjointAncestors</definition>
        <argsstring>(const std::string &amp;termC1, const std::string &amp;termC2)</argsstring>
        <name>getCommonDisjointAncestors</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>termC1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termC2</declname>
        </param>
        <briefdescription>
<para>A method for determining the common disjunctive ancestors. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the common disjunctive ancestors for two terms </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="53" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="53" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1aa935c6e99178b043fd4dbc8f2e4ba29d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoutoGraSMSharedInformation::isDisjoint</definition>
        <argsstring>(const std::string &amp;termC, const std::string &amp;termA1, const std::string &amp;termA2)</argsstring>
        <name>isDisjoint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>termC</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termA1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termA2</declname>
        </param>
        <briefdescription>
<para>A method for determining if for a term c, a pair (a1,a2) is disjoint in c. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="135" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="135" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1abbb7cbdc8131eaab6d5b467fcb1ecd8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CoutoGraSMSharedInformation::getNumPaths</definition>
        <argsstring>(const std::string &amp;termA, const std::string &amp;termB)</argsstring>
        <name>getNumPaths</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>termA</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termB</declname>
        </param>
        <briefdescription>
<para>A method for calculating the number of paths for one term to another. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the number of paths between two terms </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="172" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="172" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1aeb3ea4684e5f198464ce9354171981d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double CoutoGraSMSharedInformation::sharedInformation</definition>
        <argsstring>(const std::string &amp;termA, const std::string &amp;termB)</argsstring>
        <name>sharedInformation</name>
        <reimplements refid="classSharedInformationInterface_1a76e8858eb598442b86b0fd3be1c519e7">sharedInformation</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>termA</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termB</declname>
        </param>
        <briefdescription>
<para>An method for returning the shared information of two terms. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the mean information content disjoint common ancestors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="199" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="199" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1a1c9a0a709b77822cd3bc967beed08b66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double CoutoGraSMSharedInformation::sharedInformation</definition>
        <argsstring>(const std::string &amp;term)</argsstring>
        <name>sharedInformation</name>
        <reimplements refid="classSharedInformationInterface_1aba102c0e44fbc098baef6074f1eb37b6">sharedInformation</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>term</declname>
        </param>
        <briefdescription>
<para>An interface method for returning the shared information of a single terms,or information content. </para>        </briefdescription>
        <detaileddescription>
<para>This method privdes a mechanism for returing a term&apos;s infromation content. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="226" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="226" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1ae97d2b59ecd6d1eeee2583c6005c65a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double CoutoGraSMSharedInformation::maxInformationContent</definition>
        <argsstring>(const std::string &amp;term)</argsstring>
        <name>maxInformationContent</name>
        <reimplements refid="classSharedInformationInterface_1a7356ba99509458777972ce0f00ebd999">maxInformationContent</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>term</declname>
        </param>
        <briefdescription>
<para>An interface method for returning the maximum information content for a term. </para>        </briefdescription>
        <detaileddescription>
<para>This method provides the absolute max information content within a corpus for normalization purposes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="238" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="238" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1a718055d6fecea9e10125ae4895af7f95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool CoutoGraSMSharedInformation::hasTerm</definition>
        <argsstring>(const std::string &amp;term)</argsstring>
        <name>hasTerm</name>
        <reimplements refid="classSharedInformationInterface_1a3f056cf6a40eea8c1669108087dcd5c8">hasTerm</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>term</declname>
        </param>
        <briefdescription>
<para>An interface method for determining if a term can be found. </para>        </briefdescription>
        <detaileddescription>
<para>Determines if the term can be found in the current map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="259" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classCoutoGraSMSharedInformation_1ae6e12a30f03b0c2232d73277d8d47cd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool CoutoGraSMSharedInformation::isSameOntology</definition>
        <argsstring>(const std::string &amp;termA, const std::string &amp;termB)</argsstring>
        <name>isSameOntology</name>
        <reimplements refid="classSharedInformationInterface_1a607463b9736df9c4b8ec3ba9fe41c19d">isSameOntology</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>termA</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>termB</declname>
        </param>
        <briefdescription>
<para>An interface method for determining if the two terms are of like ontologies. </para>        </briefdescription>
        <detaileddescription>
<para>Determine if two terms are of the same ontology. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="267" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="267" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class to calculate shared infromation accross disjoint common ancetors using the exact algorithm as written in the paper. </para>    </briefdescription>
    <detaileddescription>
<para>This class calculates shared infromation accross disjoint common ancetors.</para><para>F. M. Couto, M. J. Silva, and P. M. Coutinho, &quot;Measuring semantic similarity
between Gene Ontology terms,&quot; Data &amp; Knowledge Engineering, vol. 61, pp. 137-152, Apr 2007.</para><para>Couto proposing calculating this value a subsituite for the IC of the MICA in calculating Resnik, Lin, and Jiang-Conrath </para>    </detaileddescription>
    <inheritancegraph>
      <node id="47">
        <label>CoutoGraSMSharedInformation</label>
        <link refid="classCoutoGraSMSharedInformation"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>SharedInformationInterface</label>
        <link refid="classSharedInformationInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="49">
        <label>CoutoGraSMSharedInformation</label>
        <link refid="classCoutoGraSMSharedInformation"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>SharedInformationInterface</label>
        <link refid="classSharedInformationInterface"/>
      </node>
    </collaborationgraph>
    <location file="ggtk/CoutoGraSMSharedInformation.hpp" line="35" column="1" bodyfile="ggtk/CoutoGraSMSharedInformation.hpp" bodystart="35" bodyend="308"/>
    <listofallmembers>
      <member refid="classCoutoGraSMSharedInformation_1a0c3d8e713e165cd86a0c7b3ea95bd950" prot="private" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>_goGraph</name></member>
      <member refid="classCoutoGraSMSharedInformation_1a4758ab6cce195fc9aeec4a038e2ab838" prot="private" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>_icMap</name></member>
      <member refid="classCoutoGraSMSharedInformation_1a8e923a60f27eca7922a628a9efd7afdc" prot="public" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>CoutoGraSMSharedInformation</name></member>
      <member refid="classCoutoGraSMSharedInformation_1ac1dd8eacbfde6f724b11f4b276e41faf" prot="public" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>getCommonDisjointAncestors</name></member>
      <member refid="classCoutoGraSMSharedInformation_1abbb7cbdc8131eaab6d5b467fcb1ecd8a" prot="public" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>getNumPaths</name></member>
      <member refid="classCoutoGraSMSharedInformation_1a718055d6fecea9e10125ae4895af7f95" prot="public" virt="virtual"><scope>CoutoGraSMSharedInformation</scope><name>hasTerm</name></member>
      <member refid="classCoutoGraSMSharedInformation_1aa935c6e99178b043fd4dbc8f2e4ba29d" prot="public" virt="non-virtual"><scope>CoutoGraSMSharedInformation</scope><name>isDisjoint</name></member>
      <member refid="classCoutoGraSMSharedInformation_1ae6e12a30f03b0c2232d73277d8d47cd1" prot="public" virt="virtual"><scope>CoutoGraSMSharedInformation</scope><name>isSameOntology</name></member>
      <member refid="classCoutoGraSMSharedInformation_1ae97d2b59ecd6d1eeee2583c6005c65a2" prot="public" virt="virtual"><scope>CoutoGraSMSharedInformation</scope><name>maxInformationContent</name></member>
      <member refid="classCoutoGraSMSharedInformation_1aeb3ea4684e5f198464ce9354171981d3" prot="public" virt="virtual"><scope>CoutoGraSMSharedInformation</scope><name>sharedInformation</name></member>
      <member refid="classCoutoGraSMSharedInformation_1a1c9a0a709b77822cd3bc967beed08b66" prot="public" virt="virtual"><scope>CoutoGraSMSharedInformation</scope><name>sharedInformation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
