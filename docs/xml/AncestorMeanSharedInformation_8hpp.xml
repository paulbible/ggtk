<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AncestorMeanSharedInformation_8hpp" kind="file" language="C++">
    <compoundname>AncestorMeanSharedInformation.hpp</compoundname>
    <includes refid="TermInformationContentMap_8hpp" local="no">ggtk/TermInformationContentMap.hpp</includes>
    <includes refid="SharedInformationInterface_8hpp" local="no">ggtk/SharedInformationInterface.hpp</includes>
    <includes refid="GoGraph_8hpp" local="no">ggtk/GoGraph.hpp</includes>
    <includes refid="SetUtilities_8hpp" local="no">ggtk/SetUtilities.hpp</includes>
    <includes refid="Accumulators_8hpp" local="no">ggtk/Accumulators.hpp</includes>
    <includes local="no">boost/accumulators/statistics/max.hpp</includes>
    <includedby refid="ggtk_8hpp" local="no">ggtk/ggtk.hpp</includedby>
    <incdepgraph>
      <node id="133">
        <label>boost/graph/breadth_first_search.hpp</label>
      </node>
      <node id="134">
        <label>boost/graph/connected_components.hpp</label>
      </node>
      <node id="143">
        <label>ggtk/TermProbabilityMap.hpp</label>
        <link refid="TermProbabilityMap_8hpp_source"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="122">
        <label>ggtk/AncestorMeanSharedInformation.hpp</label>
        <link refid="AncestorMeanSharedInformation.hpp"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>ggtk/SharedInformationInterface.hpp</label>
        <link refid="SharedInformationInterface_8hpp_source"/>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>cmath</label>
      </node>
      <node id="127">
        <label>string</label>
      </node>
      <node id="136">
        <label>boost/graph/reverse_graph.hpp</label>
      </node>
      <node id="141">
        <label>map</label>
      </node>
      <node id="138">
        <label>fstream</label>
      </node>
      <node id="132">
        <label>boost/graph/graph_traits.hpp</label>
      </node>
      <node id="148">
        <label>boost/accumulators/statistics/min.hpp</label>
      </node>
      <node id="149">
        <label>boost/accumulators/statistics/mean.hpp</label>
      </node>
      <node id="155">
        <label>ggtk/SetUtilities.hpp</label>
        <link refid="SetUtilities_8hpp_source"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>boost/accumulators/statistics/max.hpp</label>
      </node>
      <node id="130">
        <label>boost/graph/subgraph.hpp</label>
      </node>
      <node id="137">
        <label>ggtk/AnnotationData.hpp</label>
        <link refid="AnnotationData_8hpp_source"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>boost/graph/adjacency_iterator.hpp</label>
      </node>
      <node id="146">
        <label>boost/accumulators/statistics.hpp</label>
      </node>
      <node id="142">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="139">
        <label>vector</label>
      </node>
      <node id="145">
        <label>boost/accumulators/accumulators.hpp</label>
      </node>
      <node id="151">
        <label>boost/accumulators/statistics/variance.hpp</label>
      </node>
      <node id="128">
        <label>boost/unordered_set.hpp</label>
      </node>
      <node id="150">
        <label>boost/accumulators/statistics/covariance.hpp</label>
      </node>
      <node id="152">
        <label>boost/accumulators/statistics/variates/covariate.hpp</label>
      </node>
      <node id="153">
        <label>boost/graph/depth_first_search.hpp</label>
      </node>
      <node id="140">
        <label>iostream</label>
      </node>
      <node id="144">
        <label>ggtk/Accumulators.hpp</label>
        <link refid="Accumulators_8hpp_source"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>ggtk/GoGraph.hpp</label>
        <link refid="GoGraph_8hpp_source"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>ggtk/GoEnums.hpp</label>
        <link refid="GoEnums_8hpp_source"/>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>boost/graph/adjacency_list.hpp</label>
      </node>
      <node id="123">
        <label>ggtk/TermInformationContentMap.hpp</label>
        <link refid="TermInformationContentMap_8hpp_source"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>boost/graph/strong_components.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="158">
        <label>ggtk/ggtk.hpp</label>
        <link refid="ggtk_8hpp_source"/>
      </node>
      <node id="157">
        <label>ggtk/AncestorMeanSharedInformation.hpp</label>
        <link refid="AncestorMeanSharedInformation.hpp"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classAncestorMeanSharedInformation" prot="public">AncestorMeanSharedInformation</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*=============================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2016<sp/>Paul<sp/>W.<sp/>Bible</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight></codeline>
<codeline lineno="5"><highlight class="comment">file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ANCESTOR_MEAN_SHARED_INFORMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANCESTOR_MEAN_SHARED_INFORMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/TermInformationContentMap.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/SharedInformationInterface.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/GoGraph.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/SetUtilities.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/Accumulators.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/max.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classAncestorMeanSharedInformation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAncestorMeanSharedInformation" kindref="compound">AncestorMeanSharedInformation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"></codeline>
<codeline lineno="34" refid="classAncestorMeanSharedInformation_1aef781d2b6461b28b4974aa990611c8a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1aef781d2b6461b28b4974aa990611c8a1" kindref="member">AncestorMeanSharedInformation</ref>(<ref refid="classGoGraph" kindref="compound">GoGraph</ref>*<sp/>goGraph,<ref refid="classTermInformationContentMap" kindref="compound">TermInformationContentMap</ref><sp/>&amp;icMap){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_goGraph<sp/>=<sp/>goGraph;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_icMap<sp/>=<sp/>icMap;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"></codeline>
<codeline lineno="43" refid="classAncestorMeanSharedInformation_1a86dad7b02ff45ae758a2b311ad763350" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1a86dad7b02ff45ae758a2b311ad763350" kindref="member">sharedInformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termB){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>for<sp/>any<sp/>terms<sp/>not<sp/>in<sp/>the<sp/>datbase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_icMap.<ref refid="classTermProbabilityMap_1a14087f464ea33bf0247d6034e9ee2e9f" kindref="member">hasTerm</ref>(termA)<sp/>||<sp/>!_icMap.<ref refid="classTermProbabilityMap_1a14087f464ea33bf0247d6034e9ee2e9f" kindref="member">hasTerm</ref>(termB)){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>for<sp/>terms<sp/>in<sp/>different<sp/>ontologies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAncestorMeanSharedInformation_1a75f59ac9d53014b967d0a81de8a07dbb" kindref="member">isSameOntology</ref>(termA,<sp/>termB)){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceAccumulators_1a42d249e1cf4e4f6c496ab61b7372cf4a" kindref="member">Accumulators::MeanAccumulator</ref><sp/>meanIC;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::unordered_set&lt;std::string&gt;<sp/>ancestorsA<sp/>=<sp/>_goGraph-&gt;<ref refid="classGoGraph_1ae31e1546b740439d44860fa9543c83c2" kindref="member">getAncestorTerms</ref>(termA);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ancestorsA.insert(termA);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::unordered_set&lt;std::string&gt;<sp/>ancestorsB<sp/>=<sp/>_goGraph-&gt;<ref refid="classGoGraph_1ae31e1546b740439d44860fa9543c83c2" kindref="member">getAncestorTerms</ref>(termB);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ancestorsB.insert(termB);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::unordered_set&lt;std::string&gt;<sp/>sharedAncestors<sp/>=<sp/>SetUtilities::set_intersection(ancestorsA,ancestorsB);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::unordered_set&lt;std::string&gt;::iterator<sp/>iter<sp/>=<sp/>sharedAncestors.begin();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;iter<sp/>!=<sp/>sharedAncestors.end();<sp/>++iter){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanIC(_icMap[*iter]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceAccumulators_1a42a703c5c61fedbdd8aecd2e558a4467" kindref="member">Accumulators::extractMean</ref>(meanIC);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"></codeline>
<codeline lineno="74" refid="classAncestorMeanSharedInformation_1af31937c58ee53db666586b446bc23061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1af31937c58ee53db666586b446bc23061" kindref="member">sharedInformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>for<sp/>any<sp/>terms<sp/>not<sp/>in<sp/>the<sp/>datbase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_icMap.<ref refid="classTermProbabilityMap_1a14087f464ea33bf0247d6034e9ee2e9f" kindref="member">hasTerm</ref>(term)){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_icMap[term];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"></codeline>
<codeline lineno="87" refid="classAncestorMeanSharedInformation_1abf7d613e1459a5cf49071871e55f8a50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1abf7d613e1459a5cf49071871e55f8a50" kindref="member">maxInformationContent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxIC;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//select<sp/>the<sp/>correct<sp/>ontology<sp/>normalization<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGO_1a5ae335887b5cf40a9ef3045be9247fc3" kindref="member">GO::Onto</ref><sp/>ontoType<sp/>=<sp/>_goGraph-&gt;<ref refid="classGoGraph_1a9f4f553098e14270f07e7791cfe65447" kindref="member">getTermOntology</ref>(term);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ontoType<sp/>==<sp/>GO::BP){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIC<sp/>=<sp/>-std::log(_icMap.<ref refid="classTermProbabilityMap_1aa0cbaada30cf4fe8f7bf55acdfcbe7aa" kindref="member">getMinBP</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ontoType<sp/>==<sp/>GO::MF){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIC<sp/>=<sp/>-std::log(_icMap.<ref refid="classTermProbabilityMap_1af23163c0122e7745b6581eda91a72809" kindref="member">getMinMF</ref>());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIC<sp/>=<sp/>-std::log(_icMap.<ref refid="classTermProbabilityMap_1aa74c8e413fa1cce4d6528ccfad32efad" kindref="member">getMinCC</ref>());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIC;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"></codeline>
<codeline lineno="108" refid="classAncestorMeanSharedInformation_1af7503d6f761957bcb22d0e6614d87fa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1af7503d6f761957bcb22d0e6614d87fa4" kindref="member">hasTerm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_icMap.<ref refid="classTermProbabilityMap_1a14087f464ea33bf0247d6034e9ee2e9f" kindref="member">hasTerm</ref>(term);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"></codeline>
<codeline lineno="116" refid="classAncestorMeanSharedInformation_1a75f59ac9d53014b967d0a81de8a07dbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAncestorMeanSharedInformation_1a75f59ac9d53014b967d0a81de8a07dbb" kindref="member">isSameOntology</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termB){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_goGraph-&gt;<ref refid="classGoGraph_1a9f4f553098e14270f07e7791cfe65447" kindref="member">getTermOntology</ref>(termA)<sp/>==<sp/>_goGraph-&gt;<ref refid="classGoGraph_1a9f4f553098e14270f07e7791cfe65447" kindref="member">getTermOntology</ref>(termB);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGoGraph" kindref="compound">GoGraph</ref>*<sp/>_goGraph;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTermInformationContentMap" kindref="compound">TermInformationContentMap</ref><sp/>_icMap;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ggtk/AncestorMeanSharedInformation.hpp"/>
  </compounddef>
</doxygen>
