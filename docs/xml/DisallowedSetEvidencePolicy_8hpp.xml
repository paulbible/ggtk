<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="DisallowedSetEvidencePolicy_8hpp" kind="file" language="C++">
    <compoundname>DisallowedSetEvidencePolicy.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="EvidencePolicyInterface_8hpp" local="no">ggtk/EvidencePolicyInterface.hpp</includes>
    <includes local="no">boost/unordered_map.hpp</includes>
    <includedby refid="ggtk_8hpp" local="no">ggtk/ggtk.hpp</includedby>
    <includedby refid="GoaAnnotationParser_8hpp" local="no">ggtk/GoaAnnotationParser.hpp</includedby>
    <incdepgraph>
      <node id="353">
        <label>ggtk/DisallowedSetEvidencePolicy.hpp</label>
        <link refid="DisallowedSetEvidencePolicy.hpp"/>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="357">
        <label>string</label>
      </node>
      <node id="358">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="354">
        <label>vector</label>
      </node>
      <node id="355">
        <label>ggtk/EvidencePolicyInterface.hpp</label>
        <link refid="EvidencePolicyInterface_8hpp_source"/>
        <childnode refid="356" relation="include">
        </childnode>
      </node>
      <node id="356">
        <label>ggtk/GoEnums.hpp</label>
        <link refid="GoEnums_8hpp_source"/>
        <childnode refid="357" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="360">
        <label>ggtk/ggtk.hpp</label>
        <link refid="ggtk_8hpp_source"/>
      </node>
      <node id="359">
        <label>ggtk/DisallowedSetEvidencePolicy.hpp</label>
        <link refid="DisallowedSetEvidencePolicy.hpp"/>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="361">
        <label>ggtk/GoaAnnotationParser.hpp</label>
        <link refid="GoaAnnotationParser_8hpp_source"/>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>ggtk/GafAnnotationParser.hpp</label>
        <link refid="GafAnnotationParser_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classDisallowedSetEvidencePolicy" prot="public">DisallowedSetEvidencePolicy</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*=============================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2016<sp/>Paul<sp/>W.<sp/>Bible</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight></codeline>
<codeline lineno="5"><highlight class="comment">file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DISALLOWED_SET_EVIDENCE_POLICY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISALLOWED_SET_EVIDENCE_POLICY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ggtk/EvidencePolicyInterface.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/unordered_map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classDisallowedSetEvidencePolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDisallowedSetEvidencePolicy" kindref="compound">DisallowedSetEvidencePolicy</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classEvidencePolicyInterface" kindref="compound">EvidencePolicyInterface</ref>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"></codeline>
<codeline lineno="29" refid="classDisallowedSetEvidencePolicy_1a4db63ff71aa72c7744187a36099e5b09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1a4db63ff71aa72c7744187a36099e5b09" kindref="member">DisallowedSetEvidencePolicy</ref>(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_evidenceMap<sp/>=<sp/>boost::unordered_map&lt;GO::EvidenceCode,bool&gt;();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"></codeline>
<codeline lineno="37" refid="classDisallowedSetEvidencePolicy_1a50c8885e5a3abf0a3110492f07e21268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1a50c8885e5a3abf0a3110492f07e21268" kindref="member">DisallowedSetEvidencePolicy</ref>(std::vector&lt;GO::EvidenceCode&gt;<sp/>evidenceCodes){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_evidenceMap<sp/>=<sp/>boost::unordered_map&lt;GO::EvidenceCode,bool&gt;();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>evidenceCodes.size();++i){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_evidenceMap[evidenceCodes.at(i)]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"></codeline>
<codeline lineno="49" refid="classDisallowedSetEvidencePolicy_1aaa0959ad33624b4d418d57d286c41852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1aaa0959ad33624b4d418d57d286c41852" kindref="member">isAllowed</ref>(<ref refid="namespaceGO_1a4ce5387bbcdaec3648957c7903f2caf3" kindref="member">GO::EvidenceCode</ref><sp/>evidenceCode){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_evidenceMap.find(evidenceCode)<sp/>==<sp/>_evidenceMap.end();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"></codeline>
<codeline lineno="58" refid="classDisallowedSetEvidencePolicy_1a565f023aa750687b96206608d17cf392" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1a565f023aa750687b96206608d17cf392" kindref="member">addEvidence</ref>(<ref refid="namespaceGO_1a4ce5387bbcdaec3648957c7903f2caf3" kindref="member">GO::EvidenceCode</ref><sp/>evidenceCode){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_evidenceMap[evidenceCode]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"></codeline>
<codeline lineno="66" refid="classDisallowedSetEvidencePolicy_1ab3ccdee816e866886e77aaf1c5129ae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1ab3ccdee816e866886e77aaf1c5129ae8" kindref="member">addEvidence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;stringCode){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGO_1a4ce5387bbcdaec3648957c7903f2caf3" kindref="member">GO::EvidenceCode</ref><sp/>evidenceCode<sp/>=<sp/><ref refid="namespaceGO_1a4403262f174622b96e89612c02e46532" kindref="member">GO::evidenceStringToCode</ref>(stringCode);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evidenceCode<sp/>!=<sp/>GO::ECODE_ERROR){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_evidenceMap[evidenceCode]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"></codeline>
<codeline lineno="78" refid="classDisallowedSetEvidencePolicy_1ac913c46a483b9c163099ce5b2128b881" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDisallowedSetEvidencePolicy_1ac913c46a483b9c163099ce5b2128b881" kindref="member">isEmpty</ref>(){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unordered_map&lt;GO::EvidenceCode,bool&gt;<sp/>_evidenceMap;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ggtk/DisallowedSetEvidencePolicy.hpp"/>
  </compounddef>
</doxygen>
