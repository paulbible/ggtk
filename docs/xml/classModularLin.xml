<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classModularLin" kind="class" language="C++" prot="public">
    <compoundname>ModularLin</compoundname>
    <basecompoundref refid="classTermSimilarityInterface" prot="public" virt="non-virtual">TermSimilarityInterface</basecompoundref>
    <includes refid="ModularLin_8hpp" local="no">ggtk/ModularLin.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classModularLin_1a2effe77de963d99eda5d069614bd1342" prot="private" static="no" mutable="no">
        <type><ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref> *</type>
        <definition>SharedInformationInterface* ModularLin::_siCalculator</definition>
        <argsstring></argsstring>
        <name>_siCalculator</name>
        <briefdescription>
<para>private <ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref> member used for calculations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/ModularLin.hpp" line="84" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classModularLin_1a1d70b04bb6d75af7d86da15f33bb1732" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ModularLin::ModularLin</definition>
        <argsstring>(SharedInformationInterface *sharedInformationCalculator)</argsstring>
        <name>ModularLin</name>
        <param>
          <type><ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref> *</type>
          <declname>sharedInformationCalculator</declname>
        </param>
        <briefdescription>
<para>A constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Creates the <ref refid="classLinSimilarity" kindref="compound">LinSimilarity</ref> calculator with a particular shared information calculator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/ModularLin.hpp" line="37" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classModularLin_1a995ef9e4c53b9e96a32259157416df1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ModularLin::calculateTermSimilarity</definition>
        <argsstring>(std::string goTermA, std::string goTermB)</argsstring>
        <name>calculateTermSimilarity</name>
        <reimplements refid="classTermSimilarityInterface_1ae3474adcfcb02faef65ed5e16ef4db47">calculateTermSimilarity</reimplements>
        <param>
          <type>std::string</type>
          <declname>goTermA</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>goTermB</declname>
        </param>
        <briefdescription>
<para>A method for calculating term-to-term similarity for <ref refid="namespaceGO" kindref="compound">GO</ref> terms using Lin similarity. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the Resnik similarity or the information content of the most informative common ancestor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/ModularLin.hpp" line="45" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="45" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classModularLin_1a5c4c590808542669e7ba65b60ea8f707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ModularLin::calculateNormalizedTermSimilarity</definition>
        <argsstring>(std::string goTermA, std::string goTermB)</argsstring>
        <name>calculateNormalizedTermSimilarity</name>
        <reimplements refid="classTermSimilarityInterface_1aa46b7870c7725faab85ec502a3e5242d">calculateNormalizedTermSimilarity</reimplements>
        <param>
          <type>std::string</type>
          <declname>goTermA</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>goTermB</declname>
        </param>
        <briefdescription>
<para>A method for calculating term-to-term similarity for <ref refid="namespaceGO" kindref="compound">GO</ref> terms using normalized Lin similarity. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns the Lin similarity. Lin similarity is already normalized </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/ModularLin.hpp" line="69" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classModularLin_1a2730653a908d1d3ae8d379d166906646" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ModularLin::setSharedInformationCalculator</definition>
        <argsstring>(SharedInformationInterface *newSharedInformationCalulator)</argsstring>
        <name>setSharedInformationCalculator</name>
        <param>
          <type><ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref> *</type>
          <declname>newSharedInformationCalulator</declname>
        </param>
        <briefdescription>
<para>A method to set alternative methods of shared information calculators. </para>        </briefdescription>
        <detaileddescription>
<para>This method accepts a new method for calculating the shared information of two terms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/ModularLin.hpp" line="77" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class to calculate Lin similarity between 2 terms. </para>    </briefdescription>
    <detaileddescription>
<para>This class calculates Lin similarity.</para><para>Lin, D. (1998) An information theoretic definition of similarity. In: Proc. of the 15th Inernational Conference on Machine Learning. San Franscisco, CA: Morgan Kaufman. pp 296-304</para><para>P. W. Lord, R. D. Stevens, A. Brass, and C. A. Goble, &quot;Semantic similarity measures as tools for exploring the gene ontology,&quot; Pac Symp Biocomput, pp. 601-12, 2003.</para><para>2 * IC(MICA) / ( IC(termA) + IC(termB) ) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="152">
        <label>TermSimilarityInterface</label>
        <link refid="classTermSimilarityInterface"/>
      </node>
      <node id="151">
        <label>ModularLin</label>
        <link refid="classModularLin"/>
        <childnode refid="152" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="154">
        <label>TermSimilarityInterface</label>
        <link refid="classTermSimilarityInterface"/>
      </node>
      <node id="153">
        <label>ModularLin</label>
        <link refid="classModularLin"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ggtk/ModularLin.hpp" line="29" column="1" bodyfile="ggtk/ModularLin.hpp" bodystart="29" bodyend="86"/>
    <listofallmembers>
      <member refid="classModularLin_1a2effe77de963d99eda5d069614bd1342" prot="private" virt="non-virtual"><scope>ModularLin</scope><name>_siCalculator</name></member>
      <member refid="classModularLin_1a5c4c590808542669e7ba65b60ea8f707" prot="public" virt="virtual"><scope>ModularLin</scope><name>calculateNormalizedTermSimilarity</name></member>
      <member refid="classModularLin_1a995ef9e4c53b9e96a32259157416df1b" prot="public" virt="virtual"><scope>ModularLin</scope><name>calculateTermSimilarity</name></member>
      <member refid="classModularLin_1a1d70b04bb6d75af7d86da15f33bb1732" prot="public" virt="non-virtual"><scope>ModularLin</scope><name>ModularLin</name></member>
      <member refid="classModularLin_1a2730653a908d1d3ae8d379d166906646" prot="public" virt="non-virtual"><scope>ModularLin</scope><name>setSharedInformationCalculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
