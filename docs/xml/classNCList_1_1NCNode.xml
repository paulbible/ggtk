<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classNCList_1_1NCNode" kind="class" language="C++" prot="public">
    <compoundname>NCList::NCNode</compoundname>
    <includes refid="NCList_8hpp" local="no">ggtk/NCList.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNCList_1_1NCNode_1a369bc4997b8d3ff5c9c5951bd25ae52a" prot="public" static="no" mutable="no">
        <type><ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref></type>
        <definition>GenomicRegion NCList::NCNode::_region</definition>
        <argsstring></argsstring>
        <name>_region</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Top level region interval. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="43" column="1" bodyfile="ggtk/NCList.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNCList_1_1NCNode_1a112ccb41d149a0b9f9ee3e7d10267f48" prot="public" static="no" mutable="no">
        <type><ref refid="classNCList" kindref="compound">NCList</ref> *</type>
        <definition>NCList* NCList::NCNode::_containments</definition>
        <argsstring></argsstring>
        <name>_containments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of all regions completely contained by the top level regions interval. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="48" column="1" bodyfile="ggtk/NCList.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNCList_1_1NCNode_1af213aa74a3ce198f18f85d56135e927c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NCList::NCNode::NCNode</definition>
        <argsstring>(GenomicRegion region, std::vector&lt; GenomicRegion &gt; &amp;containments)</argsstring>
        <name>NCNode</name>
        <param>
          <type><ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref></type>
          <declname>region</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref> &gt; &amp;</type>
          <declname>containments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Node Constructor Most of the work done by <ref refid="classNCList" kindref="compound">NCList</ref> Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="53" column="1" bodyfile="ggtk/NCList.hpp" bodystart="53" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a171e5700a93bd6fe87cc19201b51c511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::contains</definition>
        <argsstring>(const GenomicRegion g)</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contains a Genomic Region Overloaded methods to check for containment or overlap</para><para>Contianment |-------------------------<mdash/>| |---------------<mdash/>| </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="73" column="1" bodyfile="ggtk/NCList.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1aed822cb1840061636984d861a2bf6dc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::contains</definition>
        <argsstring>(const std::pair&lt; size_t, size_t &gt; p)</argsstring>
        <name>contains</name>
        <param>
          <type>const std::pair&lt; size_t, size_t &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contains a start end pair </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="80" column="1" bodyfile="ggtk/NCList.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a7a1dd138ac17fefb6372428d7368fc2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::contains</definition>
        <argsstring>(const size_t start, const size_t end)</argsstring>
        <name>contains</name>
        <param>
          <type>const size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contains start and end interval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="87" column="1" bodyfile="ggtk/NCList.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a321a463ec67ae56320e292684ccf4f05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::contains</definition>
        <argsstring>(const size_t point)</argsstring>
        <name>contains</name>
        <param>
          <type>const size_t</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contains a single coordinate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="94" column="1" bodyfile="ggtk/NCList.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a08dc4cd04cd5f055c795e14015fe99d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::overlaps</definition>
        <argsstring>(const GenomicRegion g)</argsstring>
        <name>overlaps</name>
        <param>
          <type>const <ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overlaps a genomic region</para><para>Overlap |-------------------<mdash/>| |------<mdash/>| or |--------<mdash/>| </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="105" column="1" bodyfile="ggtk/NCList.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1adfcf156f611082e8a878cac5144d57f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::overlaps</definition>
        <argsstring>(const std::pair&lt; size_t, size_t &gt; p)</argsstring>
        <name>overlaps</name>
        <param>
          <type>const std::pair&lt; size_t, size_t &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overlaps a start end pair </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="112" column="1" bodyfile="ggtk/NCList.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a480672401a51f10fced603acbd913823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NCList::NCNode::overlaps</definition>
        <argsstring>(const size_t start, const size_t end)</argsstring>
        <name>overlaps</name>
        <param>
          <type>const size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overlaps a start and end interval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="119" column="1" bodyfile="ggtk/NCList.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classNCList_1_1NCNode_1a1f892f4b4baea2b6d36b8eb2e92c8181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGenomicRegion" kindref="compound">GenomicRegion</ref></type>
        <definition>GenomicRegion NCList::NCNode::getRegion</definition>
        <argsstring>()</argsstring>
        <name>getRegion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the current region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ggtk/NCList.hpp" line="125" column="1" bodyfile="ggtk/NCList.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Data structure <ref refid="classNCList_1_1NCNode" kindref="compound">NCNode</ref>, <ref refid="classNCList" kindref="compound">NCList</ref> = List of NCNodes </para>    </detaileddescription>
    <collaborationgraph>
      <node id="165">
        <label>NCList</label>
        <link refid="classNCList"/>
      </node>
      <node id="163">
        <label>GenomicRegion</label>
        <link refid="classGenomicRegion"/>
        <childnode refid="164" relation="public-inheritance">
        </childnode>
      </node>
      <node id="164">
        <label>SimpleRegion</label>
        <link refid="classSimpleRegion"/>
      </node>
      <node id="162">
        <label>NCList::NCNode</label>
        <link refid="classNCList_1_1NCNode"/>
        <childnode refid="163" relation="usage">
          <edgelabel>_region</edgelabel>
        </childnode>
        <childnode refid="165" relation="usage">
          <edgelabel>_containments</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ggtk/NCList.hpp" line="37" column="1" bodyfile="ggtk/NCList.hpp" bodystart="37" bodyend="129"/>
    <listofallmembers>
      <member refid="classNCList_1_1NCNode_1a112ccb41d149a0b9f9ee3e7d10267f48" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>_containments</name></member>
      <member refid="classNCList_1_1NCNode_1a369bc4997b8d3ff5c9c5951bd25ae52a" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>_region</name></member>
      <member refid="classNCList_1_1NCNode_1a171e5700a93bd6fe87cc19201b51c511" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>contains</name></member>
      <member refid="classNCList_1_1NCNode_1aed822cb1840061636984d861a2bf6dc1" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>contains</name></member>
      <member refid="classNCList_1_1NCNode_1a7a1dd138ac17fefb6372428d7368fc2f" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>contains</name></member>
      <member refid="classNCList_1_1NCNode_1a321a463ec67ae56320e292684ccf4f05" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>contains</name></member>
      <member refid="classNCList_1_1NCNode_1a1f892f4b4baea2b6d36b8eb2e92c8181" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>getRegion</name></member>
      <member refid="classNCList_1_1NCNode_1af213aa74a3ce198f18f85d56135e927c" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>NCNode</name></member>
      <member refid="classNCList_1_1NCNode_1a08dc4cd04cd5f055c795e14015fe99d5" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>overlaps</name></member>
      <member refid="classNCList_1_1NCNode_1adfcf156f611082e8a878cac5144d57f6" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>overlaps</name></member>
      <member refid="classNCList_1_1NCNode_1a480672401a51f10fced603acbd913823" prot="public" virt="non-virtual"><scope>NCList::NCNode</scope><name>overlaps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
