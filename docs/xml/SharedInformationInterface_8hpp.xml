<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="SharedInformationInterface_8hpp" kind="file" language="C++">
    <compoundname>SharedInformationInterface.hpp</compoundname>
    <includes local="no">string</includes>
    <includedby refid="AncestorMeanSharedInformation_8hpp" local="no">ggtk/AncestorMeanSharedInformation.hpp</includedby>
    <includedby refid="CoutoGraSMAdjustedSharedInformation_8hpp" local="no">ggtk/CoutoGraSMAdjustedSharedInformation.hpp</includedby>
    <includedby refid="CoutoGraSMSharedInformation_8hpp" local="no">ggtk/CoutoGraSMSharedInformation.hpp</includedby>
    <includedby refid="ExclusivelyInheritedSharedInformation_8hpp" local="no">ggtk/ExclusivelyInheritedSharedInformation.hpp</includedby>
    <includedby refid="FrontierSharedInformation_8hpp" local="no">ggtk/FrontierSharedInformation.hpp</includedby>
    <includedby refid="ggtk_8hpp" local="no">ggtk/ggtk.hpp</includedby>
    <includedby refid="MICASharedInformation_8hpp" local="no">ggtk/MICASharedInformation.hpp</includedby>
    <includedby refid="ModularJiangConrath_8hpp" local="no">ggtk/ModularJiangConrath.hpp</includedby>
    <includedby refid="ModularLin_8hpp" local="no">ggtk/ModularLin.hpp</includedby>
    <includedby refid="ModularResnik_8hpp" local="no">ggtk/ModularResnik.hpp</includedby>
    <incdepgraph>
      <node id="1112">
        <label>ggtk/SharedInformationInterface.hpp</label>
        <link refid="SharedInformationInterface.hpp"/>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
      <node id="1113">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1117">
        <label>ggtk/CoutoGraSMAdjustedSharedInformation.hpp</label>
        <link refid="CoutoGraSMAdjustedSharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1116">
        <label>ggtk/ggtk.hpp</label>
        <link refid="ggtk_8hpp_source"/>
      </node>
      <node id="1115">
        <label>ggtk/AncestorMeanSharedInformation.hpp</label>
        <link refid="AncestorMeanSharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1114">
        <label>ggtk/SharedInformationInterface.hpp</label>
        <link refid="SharedInformationInterface.hpp"/>
        <childnode refid="1115" relation="include">
        </childnode>
        <childnode refid="1117" relation="include">
        </childnode>
        <childnode refid="1118" relation="include">
        </childnode>
        <childnode refid="1119" relation="include">
        </childnode>
        <childnode refid="1120" relation="include">
        </childnode>
        <childnode refid="1116" relation="include">
        </childnode>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1124" relation="include">
        </childnode>
      </node>
      <node id="1120">
        <label>ggtk/FrontierSharedInformation.hpp</label>
        <link refid="FrontierSharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1121">
        <label>ggtk/MICASharedInformation.hpp</label>
        <link refid="MICASharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1124">
        <label>ggtk/ModularResnik.hpp</label>
        <link refid="ModularResnik_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1122">
        <label>ggtk/ModularJiangConrath.hpp</label>
        <link refid="ModularJiangConrath_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1119">
        <label>ggtk/ExclusivelyInheritedSharedInformation.hpp</label>
        <link refid="ExclusivelyInheritedSharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1123">
        <label>ggtk/ModularLin.hpp</label>
        <link refid="ModularLin_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
      <node id="1118">
        <label>ggtk/CoutoGraSMSharedInformation.hpp</label>
        <link refid="CoutoGraSMSharedInformation_8hpp_source"/>
        <childnode refid="1116" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classSharedInformationInterface" prot="public">SharedInformationInterface</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*=============================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2016<sp/>Paul<sp/>W.<sp/>Bible</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight></codeline>
<codeline lineno="5"><highlight class="comment">file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHARED_INFORMATION_INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHARED_INFORMATION_INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classSharedInformationInterface" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSharedInformationInterface" kindref="compound">SharedInformationInterface</ref>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface_1a76e8858eb598442b86b0fd3be1c519e7" kindref="member">sharedInformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termB)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface_1a76e8858eb598442b86b0fd3be1c519e7" kindref="member">sharedInformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface_1a7356ba99509458777972ce0f00ebd999" kindref="member">maxInformationContent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface_1a3f056cf6a40eea8c1669108087dcd5c8" kindref="member">hasTerm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;term)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSharedInformationInterface_1a607463b9736df9c4b8ec3ba9fe41c19d" kindref="member">isSameOntology</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;termB)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ggtk/SharedInformationInterface.hpp"/>
  </compounddef>
</doxygen>
